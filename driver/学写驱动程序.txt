一、
   编写驱动程序的难点并不是硬件的具体操作，而是弄清楚现有驱动程序的框架，在这个框架中加入这个硬件。比如，x86架构的内核对IDE硬盘的支持非常完善：首先通过BIOS得到硬盘的信息，或者使用默认IO地址去枚举硬盘，然后识别分区、挂接文件系统。对于其他架构的内核，只要指定了硬盘的访问地址和中断号，后面的枚举、识别和挂接的过程完全是一样的。也许修改的代码不超过10行，花费精力的地方在于：了解硬盘驱动的框架，找到修改的位置。
    编写驱动程序还有很多需要注意的地方，比如：驱动程序可能同时被多个进程使用，这需要考虑并发的问题；尽可能发挥硬件的作用以提高性能。比如在硬盘驱动程序中既可以使用DMA也可以用，使用DMA时程序比较复杂，但是可以提高效率；处理硬件的各种异常情况，否则出错时可能导致整个系统崩溃。

二、
    一般来说，编写一个Linux设备驱动程序的大致流程如下：
    1. 查看原理图、数据手册，了解设备的操作方法。
    2. 在内核中找到相近的驱动程序，以它为模板进行开发，有时候需要从零开始。
    3. 实现驱动程序的初始化：比如向内核注册这个驱动程序，这样应用程序传入文件名时，内核才能找到相应的驱动程序。
    4. 设计所要实现的操作，如open、close、read、write等函数。
    5. 实现中断服务（并不是每个驱动程序都必须）
    6. 编译该驱动程序到内核中，或者用insmod命令加载。
    7. 测试驱动程序。

